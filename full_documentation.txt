VProfile Project Documentation

Overview: The project is a multi-containerized application built using Docker. It consists of three main services:

App (Tomcat with Java application): The containerized Java web application is hosted in Tomcat.
Database (MySQL): The MySQL database service stores application data.
Web (Nginx): The Nginx container acts as a reverse proxy, routing requests to the Tomcat app.
Dockerized Components:
rabbitmq: The rabbitmq service
memcached: The service for db caching

Tomcat (App):
The Tomcat container uses a multi-stage build to clone the vprofile-project repository, build the Java application using Maven, and deploy the .war file into Tomcat. 
Dockerfile Configuration: 

FROM maven:3.9.9-eclipse-temurin-21-jammy AS MY_BUILD_IMAGE 
RUN git clone -b containers https://github.com/hkhcoder/vprofile-project.git 
RUN cd vprofile-project && mvn install 
FROM tomcat:10-jdk21 
RUN rm -rf /usr/local/tomcat/webapps/* 
COPY --from=MY_BUILD_IMAGE vprofile-project/target/vprofile-v2.war /usr/local/tomcat/webapps/ROOT.war 
EXPOSE 8080 
CMD [ "catalina.sh", "run" ]

MySQL (Database):
The MySQL container provides database services with an initial password and pre-populated data from db_backup.sql. 
Dockerfile Configuration: 

FROM mysql:8.0.33 
LABEL "Project"="Vprofile" 
ENV MYSQL_ROOT_PASSWORD="vprodbpass" 
COPY db_backup.sql docker-entrypoint-initdb.d/db_backup.sql


Nginx (Web):
The Nginx container acts as a reverse proxy, routing traffic to the Tomcat app. 
Dockerfile Configuration: 

FROM nginx:latest 
LABEL "Project"="vprofile" 
RUN rm -rf /etc/nginx/conf.d/default.conf 
COPY nginxvproapp.conf /etc/nginx/conf.d/vproapp.conf


Setup and Running the Application:

Clone the Repository: git clone https://github.com/hkhcoder/vprofile-project.git cd vprofile-project

Build the Docker Images: docker-compose build

Start the Application: docker-compose up -d

Access the Application: The app can be accessed at http://localhost:8080

Technologies Used:

Docker
Tomcat
MySQL
Nginx